#include <behaviors/rgbled_widget.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        CapsLock {
            bindings = <&kp LS(CAPSLOCK)>;
            key-positions = <10 21>;
        };

        IME_ON {
            bindings = <&kp INT_HENKAN>;
            key-positions = <18 19>;
        };

        IME_OFF {
            bindings = <&kp INT_MUHENKAN>;
            key-positions = <13 12>;
        };

        PrintScreen {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <6 7>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W      &kp E         &kp R                      &kp T                                               &kp Y      &kp U              &kp I            &kp O    &kp P
&kp A           &kp S      &kp D         &lt 4 F                    &kp G        &kp LS(LG(S))      &kp K_CONTEXT_MENU  &kp H      &kp J              &kp K            &kp L    &lt 5 SEMICOLON
&kp Z           &kp X      &kp C         &kp V                      &kp B        &kp DELETE         &lt 6 MINUS         &kp N      &mt RIGHT_SHIFT M  &mt RCTRL COMMA  &kp DOT  &lt 2 SLASH
&kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_GUI  &mt LEFT_ALT LA(NUMBER_3)  &lt 3 SPACE  &lt 1 TAB          &kp ESCAPE          &kp ENTER                                               &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        SYMBOLS {
            bindings = <
&trans     &trans      &kp PERCENT      &trans       &trans                             &kp SQT        &kp LESS_THAN         &kp GREATER_THAN       &kp BACKSLASH     &trans
&kp POUND  &kp DOLLAR  &kp EXCLAMATION  &kp AT_SIGN  &kp AMPERSAND  &trans      &trans  &kp GRAVE      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans     &trans      &trans           &trans       &trans         &trans      &trans  &kp SEMICOLON  &kp LS(SEMICOLON)     &kp DOUBLE_QUOTES      &kp TILDE         &kp CARET
&trans     &trans      &trans           &trans       &trans         &trans      &trans  &trans                                                                        &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        NUM {
            bindings = <
&kp SLASH     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS                         &kp F12  &kp F7  &kp F8  &kp F9              &trans
&kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS   &trans         &trans  &kp F11  &kp F4  &kp F5  &kp F6              &kp RIGHT_ALT
&kp PERIOD    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &kp LS(R)      &trans  &kp F10  &kp F1  &kp F2  &mt RIGHT_SHIFT F3  &trans
&kp LC(A)     &kp NUMBER_0  &trans        &trans        &trans     &trans         &trans  &trans                                       &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        ARROW {
            bindings = <
&kp BACKSPACE     &kp DEL      &trans          &kp UP_ARROW     &kp LA(P)                                       &kp LG(LS(LEFT_ARROW))  &kp LG(UP_ARROW)    &kp LG(LS(RIGHT_ARROW))  &kp LG(LC(LEFT_ARROW))  &kp LG(LC(RIGHT_ARROW))
&trans            &kp INSERT   &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp LA(J)         &trans                &trans  &kp RC(Y)               &kp LG(LEFT_ARROW)  &kp LG(RIGHT_ARROW)      &kp PAGE_UP             &kp HOME
&kp LS(NUMBER_1)  &kp LS(SQT)  &trans          &kp DOWN_ARROW   &kp LA(NUMBER_1)  &kp LA(NUMBER_2)      &trans  &kp RC(Z)               &kp LG(DOWN_ARROW)  &kp LG(TAB)              &kp PAGE_DOWN           &kp END
&trans            &trans       &trans          &trans           &trans            &trans                &trans  &trans                                                                                       &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_DOWN) LC(PAGE_UP)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB5  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB4  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB5  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB4  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        Bluetooth {
            bindings = <
&trans        &trans        &trans        &trans        &trans                                    &trans  &trans    &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &bt BT_CLR_ALL      &trans  &trans  &ind_bat  &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR          &trans  &trans  &trans    &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &bootloader         &trans  &trans                            &trans
            >;
        };
    };
};
