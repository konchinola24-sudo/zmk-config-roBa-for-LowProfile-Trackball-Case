#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <behaviors/rgbled_widget.dtsi>
#include <input/processors.dtsi>

&mkp_input_listener {
    input-processors = <&zip_temp_layer 5 250>;
};

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        CapsLock {
            bindings = <&kp LS(CAPSLOCK)>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W         &kp E      &kp R           &kp T                                                  &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A               &kp S         &kp D      &lt 3 F         &kp G      &kp LS(LG(S))           &kp K_CONTEXT_MENU  &kp H      &kp J  &kp K      &lt 5 L  &kp MINUS
&kp Z               &kp X         &kp C      &kp V           &kp B      &kp ESC                 &kp DEL             &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH
&lt 2 INT_MUHENKAN  &kp LEFT_WIN  &lt 1 INS  &kp LEFT_SHIFT  &kp LCTRL  &mt LEFT_ALT SPACE      &kp BACKSPACE       &kp ENTER                             &lt 6 INT_HENKAN
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        SYMBOLS {
            bindings = <
&trans  &trans  &kp POUND        &kp DOLLAR     &kp PERCENT                      &trans         &trans             &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&trans  &trans  &kp EXCLAMATION  &kp AT_SIGN    &trans       &trans      &trans  &kp LESS_THAN  &kp GREATER_THAN   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&trans  &trans  &kp CARET        &kp AMPERSAND  &trans       &trans      &trans  &kp SEMICOLON  &kp LS(SEMICOLON)  &trans                &trans                 &trans
&trans  &trans  &trans           &trans         &trans       &trans      &trans  &trans                                                                         &trans
            >;
        };

        NUM {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &kp F10                      &kp SLASH     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS
&trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans      &trans  &kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS
&trans  &kp F1  &kp F2  &kp F3  &kp F12  &trans      &trans  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL
&trans  &trans  &trans  &trans  &trans   &trans      &trans  &trans                                                  &trans
            >;
        };

        ARROW {
            bindings = <
&trans              &kp LG(UP_ARROW)    &trans               &trans  &trans                      &kp HOME  &trans          &kp UP_ARROW    &trans           &trans
&kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(RIGHT_ARROW)  &trans  &trans  &trans      &trans  &kp END   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans              &kp LG(TAB)         &kp LA(TAB)          &trans  &trans  &trans      &trans  &trans    &trans          &trans          &trans           &trans
&trans              &trans              &trans               &trans  &trans  &trans      &trans  &trans                                                     &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_DOWN) LC(PAGE_UP)>;
        };

        MOUSE {
            bindings = <
&trans     &trans     &trans     &trans     &trans                         &trans    &trans    &trans    &trans    &trans
&kp LC(A)  &kp LC(S)  &kp LC(D)  &trans     &kp LC(P)  &trans      &trans  &mkp MB5  &trans    &trans    &trans    &trans
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans     &trans      &trans  &mkp MB4  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans     &trans     &trans     &trans     &trans     &trans      &trans  &trans                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB5  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB4  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        Bluetooth {
            bindings = <
&trans        &trans        &trans        &trans        &trans                                    &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &bt BT_CLR_ALL      &trans  &trans  &ind_bat &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR          &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &bootloader         &trans  &trans                          &trans
            >;
        };
    };
};
